import config

from telethon import TelegramClient, events
from vk_api.utils import get_random_id
from vk_bot import VKBot

client = TelegramClient('kispython', config.TG_API_ID, config.TG_API_HASH)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ TG


def make_message_header(author, time):
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. """

    # TODO: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç—ã (+3 —á–∞—Å–∞)
    emoji = 'üêç'
    time = time.strftime("%H:%M:%S")
    return f'{emoji} {author} ({time})\n\n'


def get_message_for_vk(event):
    """ –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è """
    author = event.message.post_author
    time = event.message.date
    message_text = event.message.message
    message_header = make_message_header(author, time)
    message = message_header + message_text
    return message


@client.on(events.NewMessage(chats=config.CHANNEL_NAME))
async def new_message_handler(event):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. """

    message = get_message_for_vk(event)

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ
    if event.message.photo:
        file_path = await event.message.download_media(config.get_unique_filename())
        upload = VKBot.upload_photo(VKBot.upload, file_path)
        users = VKBot.db.get_subscribers()
        VKBot.send_message_with_photo(VKBot.vk, message, users, *upload)

    # –ï—Å–ª–∏ —Ñ–æ—Ç–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç
    elif event.message.document:
        filename = event.message.document.attributes[0].file_name
        file_path = await event.message.download_media(config.get_unique_filename())
        users = VKBot.db.get_subscribers()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä VK —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –¥–∞–ª—å—à–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤—Å–µ–º
        attachments = VKBot.upload_document(VKBot.upload, file_path, users[0], filename)
        VKBot.send_message_with_document(VKBot.vk, message, users, *attachments)

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
    else:
        users = VKBot.db.get_subscribers()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–æ—Ä—Ç–µ–∂–µ–π —Å id

        # –î–µ–ª–∞–µ–º –¥–∞–Ω–Ω—ã–µ users –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ (id –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞–º–∏)
        users_id = [str(user[0]) for user in users]

        # –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
        user_groups = VKBot.group(users_id, 80)
        for user_group in user_groups:
            VKBot.vk.messages.send(user_ids=','.join(user_group), message=message, random_id=get_random_id())


@client.on(events.MessageEdited(chats=config.CHANNEL_NAME))
async def edited_message_handler(event):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. """
    pass

with client:
    client.run_until_disconnected()
